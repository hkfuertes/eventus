<?php

/**
 * Skeleton subclass for representing a row from the 'eventos' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Tue Aug  5 15:38:17 2014
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class Event extends BaseEvent {

    /**
     * Initializes internal state of Event object.
     * @see        parent::__construct()
     */
    public function __construct(sfGuardUser $user = null) {
        parent::__construct();
        if ($user != null) {
            $seed = $user->getSalt().time();
            $fullHash = sha1(uniqid($seed . mt_rand(), true));
 
            # To get a shorter version of the hash, just use substr
            $hash = substr($fullHash, 0, 10);
            
            $this->setKey($hash);
            $this->setAdminId($user->getId());
            $this->setCreatedAt(time());
        }
    }

    private function getAdmin() {
        return sfGuardUserPeer::retrieveByPK($this->getAdminId());
    }

    public static function exposeEventList($list) {
        $retval = array();
        foreach ($list as $event) {
            $retval[] = $event->expose();
        }
        return $retval;
    }

    public static function exposeEventKeys($list) {
        $retval = array();
        foreach ($list as $event) {
            $retval[$event->getKey()] = $event->expose();
        }
        return $retval;
    }

    public function expose() {
        //return get_object_vars($this);
        return array(
            'key'=>$this->getKey(),
            'name' => $this->getName(),
            'place' => $this->getPlace(),
            'date' => $this->getDate('d-m-Y'),
            'type' => $this->getEventType()->getName(),
            'admin' => $this->getAdmin()->getUsername());
    }

}

// Event
